#
# This github action will auto build engineering releases and create a
# release tag with auto-generated release notes
#
# NOTE: This workflow will fail if it is run on a non-tagged commit
#       (See Checkout submodules and Tags section for more info)
#

name: release

# Controls when the workflow will run
on:
  # Triggers the workflow on tags with vX.X.X format (with optional -RC)
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+", "v[0-9]+.[0-9]+.[0-9]+-RC[0-9]+"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on:
      - ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    permissions:
      contents: write # Allows the action to create a release

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: bristlemouth
          environment-file: environment_ci.yml
          auto-activate-base: false

      - name: Checkout submodules
        run: git submodule update --init

      - name: Get tag name
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # Run auto_build.py to generate release packages (zipped)
      - name: Build and Package (Eng)
        if: ${{ contains( github.ref, '-RC' ) }} # Check if this is an "-RC" eng build
        env:
          MEMFAULT_ORG_TOKEN: ${{ secrets.MEMFAULT_ORG_TOKEN }}
          ED25519_PRIV_KEY: ${{ secrets.SPOTTER_ED25519 }}
        run: python3 tools/scripts/release/auto_build.py tools/scripts/release/configs/default.yml --version=${{ env.RELEASE_VERSION }} --sign --out_dir=${{ runner.temp }}/artifacts

      # If the tag name doesn't have -RC, this is a "release" build
      - name: Build and Package (Release)
        if: ${{ !contains( github.ref, '-RC' ) }}
        env:
          MEMFAULT_ORG_TOKEN: ${{ secrets.MEMFAULT_ORG_TOKEN }}
          ED25519_PRIV_KEY: ${{ secrets.SPOTTER_ED25519 }}
        run: python3 tools/scripts/release/auto_build.py tools/scripts/release/configs/default.yml --version=${{ env.RELEASE_VERSION }} --prod --sign --out_dir=${{ runner.temp }}/artifacts

      # Create a tagged release with autogenerated release notes
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: True
          generate_release_notes: True
          fail_on_unmatched_files: True
          files: ${{ runner.temp }}/artifacts/*.zip
